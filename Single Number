Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.
You must implement a solution with a linear runtime complexity and use only constant extra space.
Example 1:
Input: nums = [2,2,1]
Output: 1

Example 2:
Input: nums = [4,1,2,1,2]
Output: 4

Example 3:
Input: nums = [1]
Output: 1

Python:-

class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        ans=0
        for i in range(len(nums)):
            ans ^= nums[i]
        return ans

Explanation:-
Xor Approach:
a^a=0,a^0=0
4^1^2^1^2  (1^1=0,2^2=0)
4^0^0
4
